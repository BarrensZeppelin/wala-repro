org/springframework/data/mongodb/monitor/AbstractMonitor,hosts,()Ljava/util/List;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/util/BsonUtils,iterableToDelimitedString,(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/core/convert/converter/Converter;)Ljava/lang/String;,java/lang/Iterable,spliterator,()Ljava/util/Spliterator;
org/springframework/data/mongodb/repository/support/QuerydslPredicateExecutorSupport,toOrderSpecifiers,(Lorg/springframework/data/domain/Sort;)Ljava/util/List;,org/springframework/data/domain/Sort,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/support/SimpleMongoRepository,saveAll,(Ljava/lang/Iterable;)Ljava/util/List;,org/springframework/data/util/Streamable,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/support/SimpleMongoRepository,findAllById,(Ljava/lang/Iterable;)Ljava/lang/Iterable;,org/springframework/data/util/Streamable,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/support/SimpleMongoRepository,insert,(Ljava/lang/Iterable;)Ljava/util/List;,org/springframework/data/util/Streamable,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/support/QuerydslAbstractMongodbQuery,createProjection,(Lcom/querydsl/core/types/Expression;)Lorg/bson/Document;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository,findAllById,(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;,org/springframework/data/util/Streamable,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository,insert,(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;,org/springframework/data/util/Streamable,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/support/SimpleReactiveMongoRepository,saveAll,(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;,org/springframework/data/util/Streamable,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/query/StringBasedAggregation,doExecute,(Lorg/springframework/data/mongodb/repository/query/MongoQueryMethod;Lorg/springframework/data/repository/query/ResultProcessor;Lorg/springframework/data/mongodb/repository/query/ConvertingParameterAccessor;Ljava/lang/Class;)Ljava/lang/Object;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/MappedDocument,toIds,(Ljava/util/Collection;)Ljava/util/List;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression,unpack,(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/lang/Object;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/MergeOperation$UniqueMergeId,toDocument,(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/ProjectionOperation,inheritsFields,()Z,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/ProjectionOperation$ArrayProjection,toDocument,(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/UnsetOperation,toDocument,(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/ReplaceWithOperation,computeValue,(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/lang/Object;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/AggregationUpdate,toString,()Ljava/lang/String;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/VariableOperators$Let,getMappedIn,(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/lang/Object;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/DocumentEnhancingOperation,toDocument,(Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/bson/Document;,java/util/Set,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/aggregation/DocumentEnhancingOperation,computeValue,(Ljava/lang/Object;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Ljava/lang/Object;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/QueryOperations$UpdateContext,getUpdateOptions,(Ljava/lang/Class;Ljava/util/function/Consumer;)Lcom/mongodb/client/model/UpdateOptions;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/EntityOperations,getByIdInQuery,(Ljava/util/Collection;)Lorg/springframework/data/mongodb/core/query/Query;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/ReactiveMongoTemplate,ensureNotIterable,(Ljava/lang/Object;)V,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/ReactiveMongoTemplate,lambda$doFindAndModify$86,(Lorg/springframework/data/mongodb/core/QueryOperations$UpdateContext;Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;Ljava/lang/Class;Lorg/bson/Document;Lorg/bson/Document;Ljava/lang/String;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;)Lreactor/core/publisher/Mono;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/ReactiveMongoTemplate,lambda$doInsertBatch$42,(Ljava/lang/String;Ljava/util/List;)Lorg/reactivestreams/Publisher;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/index/IndexInfo,isHashed,()Z,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexCreator,fetchIndexInformation,(Lorg/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$IndexDefinitionHolder;)Lorg/springframework/data/mongodb/core/index/IndexInfo;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/MongoClientFactoryBean,lambda$computeClientSetting$5,(Lcom/mongodb/MongoClientSettings;Lcom/mongodb/connection/ClusterSettings;Lcom/mongodb/ConnectionString;Lcom/mongodb/connection/ClusterSettings$Builder;)V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainer,start,()V,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/DefaultReactiveIndexOperations,lookupPersistentEntity,(Ljava/lang/String;)Lorg/springframework/data/mongodb/core/mapping/MongoPersistentEntity;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/DefaultBulkOperations,bulkWriteTo,(Lcom/mongodb/client/MongoCollection;)Lcom/mongodb/bulk/BulkWriteResult;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/MongoTemplate,doAggregate,(Lorg/springframework/data/mongodb/core/aggregation/Aggregation;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/aggregation/AggregationOperationContext;)Lorg/springframework/data/mongodb/core/aggregation/AggregationResults;,java/util/ArrayList,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/MongoTemplate,doFindAndModify,(Ljava/lang/String;Lorg/bson/Document;Lorg/bson/Document;Lorg/bson/Document;Ljava/lang/Class;Lorg/springframework/data/mongodb/core/query/UpdateDefinition;Lorg/springframework/data/mongodb/core/FindAndModifyOptions;)Ljava/lang/Object;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/query/Query,with,(Lorg/springframework/data/domain/Sort;)Lorg/springframework/data/mongodb/core/query/Query;,org/springframework/data/domain/Sort,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/query/Query,getSortObject,()Lorg/bson/Document;,org/springframework/data/domain/Sort,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/query/Criteria,type,([Lorg/springframework/data/mongodb/core/schema/JsonSchemaObject$Type;)Lorg/springframework/data/mongodb/core/query/Criteria;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject,requiredProperties,()Ljava/util/Collection;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject,reduceToDocument,(Ljava/util/Collection;)Lorg/bson/Document;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ObjectJsonSchemaObject,generateDescription,()Ljava/lang/String;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject,toDocument,()Lorg/bson/Document;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject$ArrayJsonSchemaObject,generateDescription,()Ljava/lang/String;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject,toDocument,()Lorg/bson/Document;,java/util/Set,iterator,()Ljava/util/Iterator;
org/springframework/data/mongodb/core/schema/TypedJsonSchemaObject,toDocument,()Lorg/bson/Document;,java/util/Set,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/schema/UntypedJsonSchemaObject$Restrictions,render,(Ljava/util/Collection;)Ljava/util/List;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/convert/MongoJsonSchemaMapper,mapRequiredProperties,(Lorg/springframework/data/mapping/PersistentEntity;Ljava/util/Collection;)Ljava/util/List;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver,bulkFetch,(Ljava/util/List;)Ljava/util/List;,java/util/List,iterator,()Ljava/util/Iterator;
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver,bulkFetch,(Ljava/util/List;)Ljava/util/List;,java/util/List,iterator,()Ljava/util/Iterator;
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver,bulkFetch,(Ljava/util/List;)Ljava/util/List;,java/util/List,iterator,()Ljava/util/Iterator;
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver,documentWithId,(Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/stream/Stream;,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/AggregationUtil,mapAggregationPipeline,(Ljava/util/List;)Ljava/util/List;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/test/util/MongoTestTemplate,flush,([Ljava/lang/Class;)V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/test/util/MongoTestTemplate,flush,([Ljava/lang/Object;)V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/repository/AbstractPersonRepositoryIntegrationTests,shouldAllowReturningJava8StreamInCustomQuery,()V,org/springframework/data/mongodb/repository/PersonRepository,findByCustomQueryWithStreamingCursorByFirstnames,(Ljava/util/List;)Ljava/util/stream/Stream;
org/springframework/data/mongodb/performance/PerformanceTests,lambda$writingObjectsUsingMongoTemplate$6,(Ljava/util/List;)Ljava/util/List;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/performance/ReactivePerformanceTests,lambda$writingAsyncObjectsUsingPlainDriver$12,(Lcom/mongodb/reactivestreams/client/MongoCollection;Ljava/util/List;)Ljava/lang/Void;,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/index/IndexingIntegrationTests,lambda$evaluatesTimeoutSpelExpresssionWithBeanReference$1,(Lcom/mongodb/client/MongoCollection;)Ljava/util/Optional;,java/util/ArrayList,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainerTests,shouldCollectMappedChangeStreamMessagesCorrectly,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainerTests,shouldReceiveMessagesWhenAddingRequestToAlreadyStartedContainer,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainerTests,shouldStartReceivingMessagesWhenContainerStarts,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/DefaultMessageListenerContainerTests,databaseLevelWatch,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,useSimpleAggregationToFilterMessages,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,useAggregationToFilterMessages,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,mapsTypedAggregationToFilterMessages,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,mapsReservedWordsCorrectly,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,plainAggregationPipelineToFilterMessages,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,resumesCorrectly,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,resumeAtTimestampCorrectly,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,filterOnNestedElementWorksCorrectly,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/ChangeStreamTests,filterOnUpdateDescriptionElement,()V,java/util/List,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/messaging/SubscriptionUtils,awaitSubscriptions,(Ljava/time/Duration;[Lorg/springframework/data/mongodb/core/messaging/Subscription;)V,java/util/Collection,stream,()Ljava/util/stream/Stream;
org/springframework/data/mongodb/core/ReactiveMongoTemplateTransactionTests,lambda$errorInFlowOutsideTransactionDoesNotAbortIt$14,(Lorg/springframework/data/mongodb/core/ReactiveMongoOperations;Ljava/util/List;)Lorg/reactivestreams/Publisher;,java/util/List,stream,()Ljava/util/stream/Stream;
